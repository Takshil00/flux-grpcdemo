apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: promop
  namespace: promop
  annotations:
    flux.weave.works/automated: "false"
    flux.weave.works/tag.chart-image: semver:~0
spec:
  releaseName: promop
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 5.15.0
  values:
    # The following config is necessary for AWS EKS:
    # Not monitoring etcd, kube-scheduler, or kube-controller-manager because it is managed by EKS
    coreDns:
      service:
        selector:
          k8s-app: kube-dns
    defaultRules:
      rules:
        etcd: false
        kubeScheduler: false
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    # end AWS EKS config

    grafana:
      sidecar:
        dashboards:
          enabled: true
          searchNamespace: ALL
    prometheus:
      prometheusSpec:
        ruleNamespaceSelector:
          any: true
        serviceMonitorSelector:
          monitoring: promop
        serviceMonitorNamespaceSelector:
          any: true
        additionalScrapeConfigs:
          - job_name: 'istio-mesh'
            kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                - istio-system
            relabel_configs:
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: istio-telemetry;prometheus
          # Scrape config for envoy stats
          - job_name: 'envoy-stats'
            metrics_path: /stats/prometheus
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - source_labels: [__meta_kubernetes_pod_container_port_name]
              action: keep
              regex: '.*-envoy-prom'
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:15090
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod_name
            metric_relabel_configs:
            # Exclude some of the envoy metrics that have massive cardinality
            # This list may need to be pruned further moving forward, as informed
            # by performance and scalability testing.
            - source_labels: [ cluster_name ]
              regex: '(outbound|inbound|prometheus_stats).*'
              action: drop
            - source_labels: [ tcp_prefix ]
              regex: '(outbound|inbound|prometheus_stats).*'
              action: drop
            - source_labels: [ listener_address ]
              regex: '(.+)'
              action: drop
            - source_labels: [ http_conn_manager_listener_prefix ]
              regex: '(.+)'
              action: drop
            - source_labels: [ http_conn_manager_prefix ]
              regex: '(.+)'
              action: drop
            - source_labels: [ __name__ ]
              regex: 'envoy_tls.*'
              action: drop
            - source_labels: [ __name__ ]
              regex: 'envoy_tcp_downstream.*'
              action: drop
            - source_labels: [ __name__ ]
              regex: 'envoy_http_(stats|admin).*'
              action: drop
            - source_labels: [ __name__ ]
              regex: 'envoy_cluster_(lb|retry|bind|internal|max|original).*'
              action: drop
          - job_name: 'istio-policy'
            kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                - istio-system
            relabel_configs:
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: istio-policy;http-monitoring
          - job_name: 'istio-telemetry'
            kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                - istio-system
            relabel_configs:
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: istio-telemetry;http-monitoring
          - job_name: 'pilot'
            kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                - istio-system
            relabel_configs:
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: istio-pilot;http-monitoring
          - job_name: 'galley'
            kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                - istio-system
            relabel_configs:
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: istio-galley;http-monitoring
          - job_name: 'citadel'
            kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                - istio-system
            relabel_configs:
            - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: istio-citadel;http-monitoring
          
          # scrape config for nodes (kubelet)
          - job_name: 'kubernetes-nodes'
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
            - role: node
            relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/${1}/proxy/metrics
          
          - job_name: 'kubernetes-pods'
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:  # If first two labels are present, pod should be scraped  by the istio-secure job.
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            # Keep target if there's no sidecar or if prometheus.io/scheme is explicitly set to "http"
            - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_prometheus_io_scheme]
              action: keep
              regex: ((;.*)|(.*;http))
            - source_labels: [__meta_kubernetes_pod_annotation_istio_mtls]
              action: drop
              regex: (true)
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod_name
          # The following config causes this error in prometheus logs: level=error ts=2019-06-28T17:39:36.219Z caller=manager.go:123 component="scrape manager" msg="error creating new scrape pool" err="error creating HTTP client: unable to load specified CA cert /etc/istio-certs/root-cert.pem: open /etc/istio-certs/root-cert.pem: no such file or directory" scrape_pool=kubernetes-pods-istio-secure 
          # - job_name: 'kubernetes-pods-istio-secure'
          #   scheme: https
          #   tls_config:
          #     ca_file: /etc/istio-certs/root-cert.pem
          #     cert_file: /etc/istio-certs/cert-chain.pem
          #     key_file: /etc/istio-certs/key.pem
          #     insecure_skip_verify: true  # prometheus does not support secure naming.
          #   kubernetes_sd_configs:
          #   - role: pod
          #   relabel_configs:
          #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          #     action: keep
          #     regex: true
          #   # sidecar status annotation is added by sidecar injector and
          #   # istio_workload_mtls_ability can be specifically placed on a pod to indicate its ability to receive mtls traffic.
          #   - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_istio_mtls]
          #     action: keep
          #     regex: (([^;]+);([^;]*))|(([^;]*);(true))
          #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
          #     action: drop
          #     regex: (http)
          #   - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          #     action: replace
          #     target_label: __metrics_path__
          #     regex: (.+)
          #   - source_labels: [__address__]  # Only keep address that is host:port
          #     action: keep    # otherwise an extra target with ':443' is added for https scheme
          #     regex: ([^:]+):(\d+)
          #   - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          #     action: replace
          #     regex: ([^:]+)(?::\d+)?;(\d+)
          #     replacement: $1:$2
          #     target_label: __address__
          #   - action: labelmap
          #     regex: __meta_kubernetes_pod_label_(.+)
          #   - source_labels: [__meta_kubernetes_namespace]
          #     action: replace
          #     target_label: namespace
          #   - source_labels: [__meta_kubernetes_pod_name]
          #     action: replace
          #     target_label: pod_name